{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["cols","title","dataIndex","width","align","editable","className","types","App","props","handle35","data","state","xixi","mother","father","item","type","parseInt","setState","handleSum","handleSave","row","newData","index","findIndex","id","splice","renderRowClass","record","i","length","push","this","columns","map","col","onCell","Fragment","bordered","size","rowKey","components","body","EditableRow","cell","EditableCell","dataSource","pagination","rowClassName","style","marginTop","float","onClick","marginLeft","React","Component","EditableContext","createContext","Form","useForm","form","component","Provider","value","children","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","current","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","console","log","childNode","Item","margin","name","ref","onPressEnter","onBlur","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f3e571b.chunk.js","sourcesContent":["import React from 'react';\nimport { Table, Form, Input, Button } from 'antd';\n\nconst cols = [\n  {\n    title: '类型',\n    dataIndex: 'type',\n    width: '25%',\n    align: 'center'\n  },\n  {\n    title: '西',\n    dataIndex: 'xixi',\n    width: '25%',\n    editable: true,\n    align: 'center',\n    className: 'back-color'\n  },\n  {\n    title: '妈',\n    dataIndex: 'mother',\n    width: '25%',\n    editable: true,\n    align: 'center',\n    className: 'back-color1'\n  },\n  {\n    title: '爸',\n    dataIndex: 'father',\n    width: '25%',\n    editable: true,\n    align: 'center',\n    className: 'back-color2'\n  }\n]\n\nconst types = ['一','二','三','四','五','六','小计','35','葫芦','全','同','小顺','大顺','快艇','总计']\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: []\n    }\n  }\n\n  componentDidMount() {\n    let data = []\n    for(let i=0 ;i< types.length; i++) {\n      data.push({\n        id: i+1,\n        type: types[i]\n      })\n    }\n    this.setState({data})\n  }\n\n  handle35 = () => {\n    let data = this.state.data;\n    let xixi = 0, mother = 0, father = 0;\n    for(let item of data) {\n      if(item.type === '一' || item.type === '二' || item.type === '三' ||\n        item.type === '四' || item.type === '五' || item.type === '六') {\n        xixi += item.xixi?parseInt(item.xixi):0\n        mother += item.mother?parseInt(item.mother):0\n        father += item.father?parseInt(item.father):0\n      }\n    }\n    for(let item of data) {\n      if(item.type === '小计') {\n        item.xixi = xixi\n        item.mother = mother\n        item.father = father\n      }\n      if(item.type === '35') {\n        if(xixi>=63) item.xixi = 35\n        if(mother>=63) item.mother = 35\n        if(father>=63) item.father = 35\n      }\n    }\n    this.setState({data})\n  }\n\n  handleSum = () => {\n    let data = this.state.data;\n    let xixi = 0, mother = 0, father = 0;\n    for(let item of data) {\n      if(item.type === '小计' ) {\n        continue;\n      }\n      xixi += item.xixi?parseInt(item.xixi):0\n      mother += item.mother?parseInt(item.mother):0\n      father += item.father?parseInt(item.father):0\n    }\n    for(let item of data) {\n      if(item.type === '总计') {\n        item.xixi = xixi\n        item.mother = mother\n        item.father = father\n      }\n    }\n    this.setState({data})\n  }\n\n  handleSave = (row) => {\n    const newData = [...this.state.data];\n    const index = newData.findIndex(item => row.id === item.id);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row,\n    });\n    this.setState({ data: newData });\n  };\n\n  renderRowClass = (record, index) => {\n    if(record.type==='小计') {\n      return 'row-enable'\n    }\n  }\n\n  render() {\n    const { data } = this.state;\n\n    const columns = cols.map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return {\n        ...col,\n        onCell: (record) => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n\n    return (\n      <React.Fragment>\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          components={{\n              body: {\n                  row: EditableRow,\n                  cell: EditableCell,\n              },\n          }}\n          columns={columns}\n          dataSource={data}\n          pagination={false}\n          rowClassName={this.renderRowClass}\n        />\n        <div style={{width: '184px', marginTop: '6px', float: 'right'}}>\n          <Button onClick={this.handle35}>一~六小计</Button>\n          <Button onClick={this.handleSum} style={{marginLeft: '20px'}}>总计</Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n\n//可编辑行定义\nconst EditableContext = React.createContext(null);\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} style={{}}/>\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = React.useState(false);\n  const inputRef = React.useRef(null);\n  const form = React.useContext(EditableContext);\n  React.useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n      >\n        <Input style={{ width: '100%' }} ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        style={{ minHeight: '10px' }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}